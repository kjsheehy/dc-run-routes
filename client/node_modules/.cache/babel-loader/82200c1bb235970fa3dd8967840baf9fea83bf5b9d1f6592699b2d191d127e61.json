{"ast":null,"code":"var _jsxFileName = \"/Users/kevinsheehy/Documents/code-projects/dc-run-routes/client/src/components/MUI-Libary/MultipleSelectCheckmarks.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\nimport './MultipleSelectCheckmarks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 5 + ITEM_PADDING_TOP,\n      width: 200\n    }\n  }\n};\nexport default function MultipleSelectCheckmarks(props) {\n  _s();\n  const [values, setValues] = React.useState([]);\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setValues(\n    // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n    props.setParams(prevParams => {\n      return {\n        ...prevParams,\n        [props.paramKey]: value\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 200\n      },\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-multiple-checkbox-label\",\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-multiple-checkbox-label\",\n        id: \"demo-multiple-checkbox\",\n        multiple: true,\n        value: values,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: props.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => selected.join(', '),\n        MenuProps: MenuProps,\n        children: props.values.map(val => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: val,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: props.params.indexOf(val) > -1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, val, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(MultipleSelectCheckmarks, \"2pK3rqdy1zaKCApuOUtEsSz9OBs=\");\n_c = MultipleSelectCheckmarks;\nvar _c;\n$RefreshReg$(_c, \"MultipleSelectCheckmarks\");","map":{"version":3,"names":["React","OutlinedInput","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","MultipleSelectCheckmarks","props","_s","values","setValues","useState","handleChange","event","target","value","split","setParams","prevParams","paramKey","children","sx","m","className","id","label","fileName","_jsxFileName","lineNumber","columnNumber","labelId","multiple","onChange","input","renderValue","selected","join","map","val","checked","params","indexOf","primary","_c","$RefreshReg$"],"sources":["/Users/kevinsheehy/Documents/code-projects/dc-run-routes/client/src/components/MUI-Libary/MultipleSelectCheckmarks.js"],"sourcesContent":["import * as React from 'react';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\nimport './MultipleSelectCheckmarks.css';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 5 + ITEM_PADDING_TOP,\n      width: 200,\n    },\n  },\n};\n\nexport default function MultipleSelectCheckmarks(props) {\n  const [values, setValues] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setValues(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value\n    );\n    props.setParams((prevParams) => {\n      return {\n        ...prevParams,\n        [props.paramKey]: value,\n      };\n    });\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 200 }} className=\"form-control\">\n        <InputLabel id=\"demo-multiple-checkbox-label\">{props.label}</InputLabel>\n        <Select\n          labelId=\"demo-multiple-checkbox-label\"\n          id=\"demo-multiple-checkbox\"\n          multiple\n          value={values}\n          onChange={handleChange}\n          input={<OutlinedInput label={props.label} />}\n          renderValue={(selected) => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {props.values.map((val) => (\n            <MenuItem key={val} value={val}>\n              <Checkbox checked={props.params.indexOf(val) > -1} />\n              <ListItemText primary={val} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}