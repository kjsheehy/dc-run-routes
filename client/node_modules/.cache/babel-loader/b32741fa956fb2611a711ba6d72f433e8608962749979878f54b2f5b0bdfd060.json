{"ast":null,"code":"var _jsxFileName = \"/Users/kevinsheehy/Documents/code-projects/dc-run-routes/src/components/MUI-Libary/MultipleSelectCheckmarks.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nexport default function MultipleSelectCheckmarks(props) {\n  _s();\n  const [values, setValues] = React.useState([]);\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setValues(\n    // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 200\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-multiple-checkbox-label\",\n        children: \"Tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-multiple-checkbox-label\",\n        id: \"demo-multiple-checkbox\",\n        multiple: true,\n        value: values,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: \"Tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => selected.join(', '),\n        MenuProps: MenuProps,\n        children: props.values.map(val => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: val,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: values.indexOf(val) > -1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, val, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(MultipleSelectCheckmarks, \"2pK3rqdy1zaKCApuOUtEsSz9OBs=\");\n_c = MultipleSelectCheckmarks;\nvar _c;\n$RefreshReg$(_c, \"MultipleSelectCheckmarks\");","map":{"version":3,"names":["React","OutlinedInput","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","MultipleSelectCheckmarks","props","_s","values","setValues","useState","handleChange","event","target","value","split","children","sx","m","id","fileName","_jsxFileName","lineNumber","columnNumber","labelId","multiple","onChange","input","label","renderValue","selected","join","map","val","checked","indexOf","primary","_c","$RefreshReg$"],"sources":["/Users/kevinsheehy/Documents/code-projects/dc-run-routes/src/components/MUI-Libary/MultipleSelectCheckmarks.js"],"sourcesContent":["import * as React from 'react';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport default function MultipleSelectCheckmarks(props) {\n  const [values, setValues] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setValues(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 200 }}>\n        <InputLabel id=\"demo-multiple-checkbox-label\">Tag</InputLabel>\n        <Select\n          labelId=\"demo-multiple-checkbox-label\"\n          id=\"demo-multiple-checkbox\"\n          multiple\n          value={values}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Tag\" />}\n          renderValue={(selected) => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {props.values.map((val) => (\n            <MenuItem key={val} value={val}>\n              <Checkbox checked={values.indexOf(val) > -1} />\n              <ListItemText primary={val} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}